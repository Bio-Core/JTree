// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Patient patient
// swagger:model Patient
type Patient struct {

	// clinical history
	ClinicalHistory *string `json:"clinical_history,omitempty" db:"clinical_history"`

	// date received
	DateReceived *string `json:"date_received,omitempty" db:"date_received"`

	// date reported
	DateReported *string `json:"date_reported,omitempty" db:"date_reported"`

	// dob
	Dob *string `json:"dob,omitempty" db:"dob"`

	// first name
	FirstName *string `json:"first_name,omitempty" db:"first_name"`

	// gender
	Gender *string `json:"gender,omitempty" db:"gender"`

	// initials
	Initials *string `json:"initials,omitempty" db:"initials"`

	// last name
	LastName *string `json:"last_name,omitempty" db:"last_name"`

	// mrn
	Mrn *string `json:"mrn,omitempty" db:"mrn"`

	// on hcn
	OnHcn *string `json:"on_hcn,omitempty" db:"on_hcn"`

	// patient id
	PatientID *string `json:"patient_id,omitempty" db:"patient_id"`

	// patient type
	PatientType *string `json:"patient_type,omitempty" db:"patient_type"`

	// referring physican
	ReferringPhysican *string `json:"referring_physican,omitempty" db:"referring_physican"`

	// sample id
	SampleID *string `json:"sample_id,omitempty" db:"sample_id"`

	// se num
	SeNum *string `json:"se_num,omitempty" db:"se_num"`

	// surgical date
	SurgicalDate *string `json:"surgical_date,omitempty" db:"surgical_date"`
}

// Validate validates this patient
func (m *Patient) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Patient) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Patient) UnmarshalBinary(b []byte) error {
	var res Patient
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
