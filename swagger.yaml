---
swagger: "2.0"
info:
  description: "Metadata API"
  version: "0.1.0"
  title: "Jtree Metadata API"
  contact:
    email: "info@distributedgenomics.ca"
  license:
    name: "GPL"
    url: "https://www.gnu.org/licenses/gpl-3.0.en.html"
host: "virtserver.swaggerhub.com"
basePath: "/Jtree/metadata/0.1.0"
schemes:
- "http"
paths:
  /patient/search:
    get:
      summary: "searches patients"
      description: "By passing in the appropriate options, you can search for\navailable\
        \ patients\n"
      operationId: "searchPatient"
      produces:
      - "application/json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up inventory"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Patient"
        400:
          description: "bad input parameter"

  /patient/columns:
      get:
        summary: "gets columns"
        description: "gets column names"
        operationId: "getPatientColumns"
        produces:
        - "application/json"
        responses:
          200:
            description: "columns"
            schema:
              type: "array"
              items:
                type: "string"
          400:
            description: "bad input parameter"   

  /patient/{patientId}:
    parameters:
    - name: "patientId"
      in: "path"
      required: true
      type: "string"
    get:
      summary: "Returns a patient by ID."
      operationId: "getPatient"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Patient"
        404:
          description: "patient not found"

  /patient:
    post:
      summary: "adds a patient item"
      description: "Adds a patient to the system"
      operationId: "addPatient"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "patient"
        description: "Patient"
        required: false
        schema:
          $ref: "#/definitions/Patient"
      responses:
        201:
          description: "item created"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"

  /samples/search:
    get:
      summary: "searches samples"
      description: "By passing in the appropriate options, you can search for\navailable\
        \ sample\n"
      operationId: "searchSample"
      produces:
      - "application/json"
      parameters:
      - name: "searchString"
        in: "query"
        description: "pass an optional search string for looking up inventory"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "search results matching criteria"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sample"
        400:
          description: "bad input parameter"

  /columns:
      get:
        summary: "gets columns"
        description: "gets column names"
        operationId: "getSampleColumns"
        produces:
        - "application/json"
        responses:
          200:
            description: "columns"
            schema:
              type: "array"
              items:
                type: "string"
          400:
            description: "bad input parameter"          

  /sample/{sampleId}:
    parameters:
    - in: path
      name: sampleId
      required: true
      type: string
    get:
      summary: "Returns a sample by ID."
      operationId: "getSample"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sample"
        404:
          description: "Sample not found"

  /query:
    post:
      summary: "Query for Sample"
      operationId: "getSamplesByQuery"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: query
        required: false
        schema:
            $ref: "#/definitions/Query"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sample"
        404:
          description: "Sample not found"


  /sample:
    post:
      summary: "adds a sample"
      description: "Adds a sample to the system"
      operationId: "addSample"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "sample"
        description: "Sample"
        required: false
        schema:
          $ref: "#/definitions/Sample"
      responses:
        201:
          description: "item created"
        400:
          description: "invalid input, object invalid"
        409:
          description: "an existing item already exists"

definitions:
  Patient:
    type: "object"
    properties:
      patient_id:
        type: "string"
        x-nullable: true        
        x-go-custom-tag: "db:\"patient_id\""
      sample_id:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"sample_id\""
      first_name:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"first_name\""
      last_name:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"last_name\""
      initials:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"initials\""
      gender: 
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"gender\""
      mrn:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"mrn\""
      dob:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"dob\""
      on_hcn:
        type: "string"   
        x-nullable: true         
        x-go-custom-tag: "db:\"on_hcn\""    
      clinical_history:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"clinical_history\""
      patient_type:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"patient_type\""
      se_num:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"se_num\""
      date_received: 
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"date_received\""
      referring_physican: 
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"referring_physican\""
      date_reported:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"date_reported\""
      surgical_date: 
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"surgical_date\""
  Sample:
    type: "object"
    properties:
      sample_id:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"sample_id\""
      facility:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"facility\""
      test_requested:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"test_requested\""
      se_num:
        type: "string"
        x-nullable: true        
        x-go-custom-tag: "db:\"se_num\""
      date_collected:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"date_collected\""      
      date_received:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"date_received\""      
      sample_type:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"sample_type\""      
      material_received:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"material_received\""      
      material_received_num:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"material_received_num\""      
      material_received_other:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"material_received_other\""      
      volume_of_blood_marrow:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"volume_of_blood_marrow\""
      surgical_num:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"surgical_num\""
      tumor_site:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"tumor_site\""
      historical_diagnosis:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"historical_diagnosis\""
      tumor_percnt_of_total:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"tumor_percnt_of_total\""
      tumor_percnt_of_circled:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"tumor_percnt_of_circled\""
      reviewed_by:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"reviewed_by\""
      h_e_slide_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"h_e_slide_location\""
      non_uhn_id:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"non_uhn_id\""
      name_of_requestor:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"name_of_requestor\""
      dna_concentration:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_concentration\""
      dna_volume:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_volume\""
      dna_location: 
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_location\""
      rna_concentration: 
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_concentration\""
      rna_volume:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_volume\""
      rna_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_location\""
      wbc_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"wbc_location\""
      plasma_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"plasma_location\""
      cf_plasma_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"cf_plasma_location\""
      pb_bm_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"pb_bm_location\""
      rna_lysate_location:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_lysate_location\""
      sample_size:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"sample_size\""
      study_id:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"study_id\""
      sample_name:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"sample_name\""
      date_submitted:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"date_submitted\""
      container_type:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"container_type\""
      container_name:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"container_name\""
      container_id:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"container_id\""
      container_well:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"container_well\""
      copath_num:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"copath_num\""
      other_identifier:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"other_identifier\""
      has_sample_files:
        type: "boolean"
        x-nullable: true         
        x-go-custom-tag: "db:\"has_sample_files\""
      dna_sample_barcode:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_sample_barcode\""
      dna_extraction_date:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_extraction_date\""
      dna_quality:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_quality\""
      ffpe_qc_date: 
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"ffpe_qc_date\""
      delta_ct_Value: 
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"delta_ct_Value\""
      comments:
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"comments\""
      rnase_p_date: 
        type: "string"
        x-nullable: true         
        x-go-custom-tag: "db:\"rnase_p_date\""
      dna_quality_by_rnase_p: 
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"dna_quality_by_rnase_p\""
      rna_quality:
        type: "number" 
        format: "float"
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_quality\""
      rna_extraction_date:
        type: "string" 
        x-nullable: true         
        x-go-custom-tag: "db:\"rna_extraction_date\""
  Query:
    type: "object"
    properties:
      selected_condition:
        type: "array"
        items:
          type: "array"
          items:
            type: "string"
      selected_tables:
        type: "array"
        items:
          type: "string"
      selected_fields:
        type: "array"
        items:
          type: "string"
  Record:
    type: "object"
    properties:
      Sample:
        $ref: "#/definitions/Sample"
      Patient:
        $ref: "#/definitions/Patient"
