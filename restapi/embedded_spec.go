// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Metadata API",
    "title": "Jtree Metadata API",
    "contact": {
      "email": "info@distributedgenomics.ca"
    },
    "license": {
      "name": "GPL",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "version": "0.1.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/Jtree/metadata/0.1.0",
  "paths": {
    "/patient": {
      "post": {
        "description": "Adds a patient to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a patient item",
        "operationId": "addPatient",
        "parameters": [
          {
            "description": "Patient",
            "name": "patient",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/patient/search": {
      "get": {
        "description": "By passing in the appropriate options, you can search for\navailable patients\n",
        "produces": [
          "application/json"
        ],
        "summary": "searches patients",
        "operationId": "searchPatient",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "pass an optional search string for looking up inventory",
            "name": "searchString",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/patient/{patientId}": {
      "get": {
        "summary": "Returns a patient by ID.",
        "operationId": "getPatient",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Patient"
              }
            }
          },
          "404": {
            "description": "patient not found"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "patientId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/sample": {
      "post": {
        "description": "Adds a sample to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a sample",
        "operationId": "addSample",
        "parameters": [
          {
            "description": "Sample",
            "name": "sample",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/sample/{sampleId}": {
      "get": {
        "summary": "Returns a sample by ID.",
        "operationId": "getSample",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "sampleId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/samples/search": {
      "get": {
        "description": "By passing in the appropriate options, you can search for\navailable sample\n",
        "produces": [
          "application/json"
        ],
        "summary": "searches samples",
        "operationId": "searchSample",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "pass an optional search string for looking up inventory",
            "name": "searchString",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sample"
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "definitions": {
    "Patient": {
      "type": "object",
      "properties": {
        "clinical_history": {
          "type": "string",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-nullable": true
        },
        "date_reported": {
          "type": "string",
          "x-nullable": true
        },
        "dob": {
          "type": "string",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "x-nullable": true
        },
        "initials": {
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-nullable": true
        },
        "mrn": {
          "type": "string",
          "x-nullable": true
        },
        "on_hcn": {
          "type": "string",
          "x-nullable": true
        },
        "patient_id": {
          "type": "string",
          "x-nullable": true
        },
        "patient_type": {
          "type": "string",
          "x-nullable": true
        },
        "referring_physican": {
          "type": "string",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-nullable": true
        },
        "surgical_date": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Sample": {
      "type": "object",
      "properties": {
        "cf_plasma_location": {
          "type": "string",
          "x-nullable": true
        },
        "comments": {
          "type": "string",
          "x-nullable": true
        },
        "container_id": {
          "type": "string",
          "x-nullable": true
        },
        "container_name": {
          "type": "string",
          "x-nullable": true
        },
        "container_type": {
          "type": "string",
          "x-nullable": true
        },
        "container_well": {
          "type": "string",
          "x-nullable": true
        },
        "copath_num": {
          "type": "string",
          "x-nullable": true
        },
        "date_collected": {
          "type": "string",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-nullable": true
        },
        "date_submitted": {
          "type": "string",
          "x-nullable": true
        },
        "delta_ct_Value": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_concentration": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_extraction_date": {
          "type": "string",
          "x-nullable": true
        },
        "dna_location": {
          "type": "string",
          "x-nullable": true
        },
        "dna_quality": {
          "type": "string",
          "x-nullable": true
        },
        "dna_quality_by_rnase_p": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_sample_barcode": {
          "type": "string",
          "x-nullable": true
        },
        "dna_volume": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "facility": {
          "type": "string",
          "x-nullable": true
        },
        "ffpe_qc_date": {
          "type": "string",
          "x-nullable": true
        },
        "h_e_slide_location": {
          "type": "string",
          "x-nullable": true
        },
        "has_sample_files": {
          "type": "boolean",
          "x-nullable": true
        },
        "historical_diagnosis": {
          "type": "string",
          "x-nullable": true
        },
        "material_received": {
          "type": "string",
          "x-nullable": true
        },
        "material_received_num": {
          "type": "string",
          "x-nullable": true
        },
        "material_received_other": {
          "type": "string",
          "x-nullable": true
        },
        "name_of_requestor": {
          "type": "string",
          "x-nullable": true
        },
        "non_uhn_id": {
          "type": "string",
          "x-nullable": true
        },
        "other_identifier": {
          "type": "string",
          "x-nullable": true
        },
        "pb_bm_location": {
          "type": "string",
          "x-nullable": true
        },
        "plasma_location": {
          "type": "string",
          "x-nullable": true
        },
        "reviewed_by": {
          "type": "string",
          "x-nullable": true
        },
        "rna_concentration": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rna_extraction_date": {
          "type": "string",
          "x-nullable": true
        },
        "rna_location": {
          "type": "string",
          "x-nullable": true
        },
        "rna_lysate_location": {
          "type": "string",
          "x-nullable": true
        },
        "rna_quality": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rna_volume": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rnase_p_date": {
          "type": "string",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-nullable": true
        },
        "sample_name": {
          "type": "string",
          "x-nullable": true
        },
        "sample_size": {
          "type": "string",
          "x-nullable": true
        },
        "sample_type": {
          "type": "string",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-nullable": true
        },
        "surgical_num": {
          "type": "string",
          "x-nullable": true
        },
        "test_requested": {
          "type": "string",
          "x-nullable": true
        },
        "tumor_percnt_of_circled": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tumor_percnt_of_total": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tumor_site": {
          "type": "string",
          "x-nullable": true
        },
        "volume_of_blood_marrow": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "wbc_location": {
          "type": "string",
          "x-nullable": true
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Metadata API",
    "title": "Jtree Metadata API",
    "contact": {
      "email": "info@distributedgenomics.ca"
    },
    "license": {
      "name": "GPL",
      "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
    },
    "version": "0.1.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/Jtree/metadata/0.1.0",
  "paths": {
    "/patient": {
      "post": {
        "description": "Adds a patient to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a patient item",
        "operationId": "addPatient",
        "parameters": [
          {
            "description": "Patient",
            "name": "patient",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/patient/search": {
      "get": {
        "description": "By passing in the appropriate options, you can search for\navailable patients\n",
        "produces": [
          "application/json"
        ],
        "summary": "searches patients",
        "operationId": "searchPatient",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "pass an optional search string for looking up inventory",
            "name": "searchString",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "$ref": "#/definitions/searchPatientOKBody"
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/patient/{patientId}": {
      "get": {
        "summary": "Returns a patient by ID.",
        "operationId": "getPatient",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getPatientOKBody"
            }
          },
          "404": {
            "description": "patient not found"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "patientId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/sample": {
      "post": {
        "description": "Adds a sample to the system",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "adds a sample",
        "operationId": "addSample",
        "parameters": [
          {
            "description": "Sample",
            "name": "sample",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Sample"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "item created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/sample/{sampleId}": {
      "get": {
        "summary": "Returns a sample by ID.",
        "operationId": "getSample",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getSampleOKBody"
            }
          },
          "404": {
            "description": "Sample not found"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "sampleId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/samples/search": {
      "get": {
        "description": "By passing in the appropriate options, you can search for\navailable sample\n",
        "produces": [
          "application/json"
        ],
        "summary": "searches samples",
        "operationId": "searchSample",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "pass an optional search string for looking up inventory",
            "name": "searchString",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "schema": {
              "$ref": "#/definitions/searchSampleOKBody"
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    }
  },
  "definitions": {
    "Patient": {
      "type": "object",
      "properties": {
        "clinical_history": {
          "type": "string",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-nullable": true
        },
        "date_reported": {
          "type": "string",
          "x-nullable": true
        },
        "dob": {
          "type": "string",
          "x-nullable": true
        },
        "first_name": {
          "type": "string",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "x-nullable": true
        },
        "initials": {
          "type": "string",
          "x-nullable": true
        },
        "last_name": {
          "type": "string",
          "x-nullable": true
        },
        "mrn": {
          "type": "string",
          "x-nullable": true
        },
        "on_hcn": {
          "type": "string",
          "x-nullable": true
        },
        "patient_id": {
          "type": "string",
          "x-nullable": true
        },
        "patient_type": {
          "type": "string",
          "x-nullable": true
        },
        "referring_physican": {
          "type": "string",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-nullable": true
        },
        "surgical_date": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "Sample": {
      "type": "object",
      "properties": {
        "cf_plasma_location": {
          "type": "string",
          "x-nullable": true
        },
        "comments": {
          "type": "string",
          "x-nullable": true
        },
        "container_id": {
          "type": "string",
          "x-nullable": true
        },
        "container_name": {
          "type": "string",
          "x-nullable": true
        },
        "container_type": {
          "type": "string",
          "x-nullable": true
        },
        "container_well": {
          "type": "string",
          "x-nullable": true
        },
        "copath_num": {
          "type": "string",
          "x-nullable": true
        },
        "date_collected": {
          "type": "string",
          "x-nullable": true
        },
        "date_received": {
          "type": "string",
          "x-nullable": true
        },
        "date_submitted": {
          "type": "string",
          "x-nullable": true
        },
        "delta_ct_Value": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_concentration": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_extraction_date": {
          "type": "string",
          "x-nullable": true
        },
        "dna_location": {
          "type": "string",
          "x-nullable": true
        },
        "dna_quality": {
          "type": "string",
          "x-nullable": true
        },
        "dna_quality_by_rnase_p": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "dna_sample_barcode": {
          "type": "string",
          "x-nullable": true
        },
        "dna_volume": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "facility": {
          "type": "string",
          "x-nullable": true
        },
        "ffpe_qc_date": {
          "type": "string",
          "x-nullable": true
        },
        "h_e_slide_location": {
          "type": "string",
          "x-nullable": true
        },
        "has_sample_files": {
          "type": "boolean",
          "x-nullable": true
        },
        "historical_diagnosis": {
          "type": "string",
          "x-nullable": true
        },
        "material_received": {
          "type": "string",
          "x-nullable": true
        },
        "material_received_num": {
          "type": "string",
          "x-nullable": true
        },
        "material_received_other": {
          "type": "string",
          "x-nullable": true
        },
        "name_of_requestor": {
          "type": "string",
          "x-nullable": true
        },
        "non_uhn_id": {
          "type": "string",
          "x-nullable": true
        },
        "other_identifier": {
          "type": "string",
          "x-nullable": true
        },
        "pb_bm_location": {
          "type": "string",
          "x-nullable": true
        },
        "plasma_location": {
          "type": "string",
          "x-nullable": true
        },
        "reviewed_by": {
          "type": "string",
          "x-nullable": true
        },
        "rna_concentration": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rna_extraction_date": {
          "type": "string",
          "x-nullable": true
        },
        "rna_location": {
          "type": "string",
          "x-nullable": true
        },
        "rna_lysate_location": {
          "type": "string",
          "x-nullable": true
        },
        "rna_quality": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rna_volume": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "rnase_p_date": {
          "type": "string",
          "x-nullable": true
        },
        "sample_id": {
          "type": "string",
          "x-nullable": true
        },
        "sample_name": {
          "type": "string",
          "x-nullable": true
        },
        "sample_size": {
          "type": "string",
          "x-nullable": true
        },
        "sample_type": {
          "type": "string",
          "x-nullable": true
        },
        "se_num": {
          "type": "string",
          "x-nullable": true
        },
        "study_id": {
          "type": "string",
          "x-nullable": true
        },
        "surgical_num": {
          "type": "string",
          "x-nullable": true
        },
        "test_requested": {
          "type": "string",
          "x-nullable": true
        },
        "tumor_percnt_of_circled": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tumor_percnt_of_total": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "tumor_site": {
          "type": "string",
          "x-nullable": true
        },
        "volume_of_blood_marrow": {
          "type": "number",
          "format": "float",
          "x-nullable": true
        },
        "wbc_location": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "getPatientOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Patient"
      },
      "x-go-gen-location": "operations"
    },
    "getSampleOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Sample"
      },
      "x-go-gen-location": "operations"
    },
    "searchPatientOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Patient"
      },
      "x-go-gen-location": "operations"
    },
    "searchSampleOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Sample"
      },
      "x-go-gen-location": "operations"
    }
  }
}`))
}
