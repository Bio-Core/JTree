// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// AddExperimentCreatedCode is the HTTP code returned for type AddExperimentCreated
const AddExperimentCreatedCode int = 201

/*AddExperimentCreated item created

swagger:response addExperimentCreated
*/
type AddExperimentCreated struct {
}

// NewAddExperimentCreated creates AddExperimentCreated with default headers values
func NewAddExperimentCreated() *AddExperimentCreated {
	return &AddExperimentCreated{}
}

// WriteResponse to the client
func (o *AddExperimentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddExperimentBadRequestCode is the HTTP code returned for type AddExperimentBadRequest
const AddExperimentBadRequestCode int = 400

/*AddExperimentBadRequest invalid input, object invalid

swagger:response addExperimentBadRequest
*/
type AddExperimentBadRequest struct {
}

// NewAddExperimentBadRequest creates AddExperimentBadRequest with default headers values
func NewAddExperimentBadRequest() *AddExperimentBadRequest {
	return &AddExperimentBadRequest{}
}

// WriteResponse to the client
func (o *AddExperimentBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// AddExperimentConflictCode is the HTTP code returned for type AddExperimentConflict
const AddExperimentConflictCode int = 409

/*AddExperimentConflict an existing item already exists

swagger:response addExperimentConflict
*/
type AddExperimentConflict struct {
}

// NewAddExperimentConflict creates AddExperimentConflict with default headers values
func NewAddExperimentConflict() *AddExperimentConflict {
	return &AddExperimentConflict{}
}

// WriteResponse to the client
func (o *AddExperimentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
