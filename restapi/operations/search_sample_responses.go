// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Bio-core/jtree/models"
)

// SearchSampleOKCode is the HTTP code returned for type SearchSampleOK
const SearchSampleOKCode int = 200

/*SearchSampleOK search results matching criteria

swagger:response searchSampleOK
*/
type SearchSampleOK struct {

	/*
	  In: Body
	*/
	Payload models.SearchSampleOKBody `json:"body,omitempty"`
}

// NewSearchSampleOK creates SearchSampleOK with default headers values
func NewSearchSampleOK() *SearchSampleOK {
	return &SearchSampleOK{}
}

// WithPayload adds the payload to the search sample o k response
func (o *SearchSampleOK) WithPayload(payload models.SearchSampleOKBody) *SearchSampleOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search sample o k response
func (o *SearchSampleOK) SetPayload(payload models.SearchSampleOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchSampleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.SearchSampleOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// SearchSampleBadRequestCode is the HTTP code returned for type SearchSampleBadRequest
const SearchSampleBadRequestCode int = 400

/*SearchSampleBadRequest bad input parameter

swagger:response searchSampleBadRequest
*/
type SearchSampleBadRequest struct {
}

// NewSearchSampleBadRequest creates SearchSampleBadRequest with default headers values
func NewSearchSampleBadRequest() *SearchSampleBadRequest {
	return &SearchSampleBadRequest{}
}

// WriteResponse to the client
func (o *SearchSampleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
