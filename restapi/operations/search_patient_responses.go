// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/Bio-core/jtree/models"
)

// SearchPatientOKCode is the HTTP code returned for type SearchPatientOK
const SearchPatientOKCode int = 200

/*SearchPatientOK search results matching criteria

swagger:response searchPatientOK
*/
type SearchPatientOK struct {

	/*
	  In: Body
	*/
	Payload models.SearchPatientOKBody `json:"body,omitempty"`
}

// NewSearchPatientOK creates SearchPatientOK with default headers values
func NewSearchPatientOK() *SearchPatientOK {
	return &SearchPatientOK{}
}

// WithPayload adds the payload to the search patient o k response
func (o *SearchPatientOK) WithPayload(payload models.SearchPatientOKBody) *SearchPatientOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search patient o k response
func (o *SearchPatientOK) SetPayload(payload models.SearchPatientOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPatientOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.SearchPatientOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// SearchPatientBadRequestCode is the HTTP code returned for type SearchPatientBadRequest
const SearchPatientBadRequestCode int = 400

/*SearchPatientBadRequest bad input parameter

swagger:response searchPatientBadRequest
*/
type SearchPatientBadRequest struct {
}

// NewSearchPatientBadRequest creates SearchPatientBadRequest with default headers values
func NewSearchPatientBadRequest() *SearchPatientBadRequest {
	return &SearchPatientBadRequest{}
}

// WriteResponse to the client
func (o *SearchPatientBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
